<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAAEASABIAAD/4QB2RXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAABAAAAALAAAAABVTklDT0RFAABMAEUAQQBEACAAVABlAGMAaABuAG8AbABvAGcAaQBlAHMAIABJ
        AG4AYwAuACAAVgAxAC4AMAAxAAD/2wBDABUODxIPDRUSERIXFhUZHzQiHx0dH0AuMCY0TENQT0tDSUhU
        X3lmVFlyW0hJaY9qcn2Bh4mHUWWVn5OEnnmFh4L/2wBDARYXFx8bHz4iIj6CV0lXgoKCgoKCgoKCgoKC
        goKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoL/wAARCAD6ASwDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwC3nApG4me9IYhpARmkA057UAJQAZFACg4NADgaYADzQAH0oADS
        AQ0ANoGBPrSAUIzDgUWGSLAo680corjXhGOBik4jTK7QjPBrJodyMoy9eaNRhnp2pAG6ncQqtmqQCiqS
        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
</value>
  </data>
</root>